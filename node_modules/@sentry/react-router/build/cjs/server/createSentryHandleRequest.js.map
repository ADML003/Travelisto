{"version":3,"file":"createSentryHandleRequest.js","sources":["../../../src/server/createSentryHandleRequest.tsx"],"sourcesContent":["import React from 'react';\nimport type { AppLoadContext, EntryContext, ServerRouter } from 'react-router';\nimport type { ReactNode } from 'react';\nimport { getMetaTagTransformer, wrapSentryHandleRequest } from './wrapSentryHandleRequest';\nimport type { createReadableStreamFromReadable } from '@react-router/node';\nimport { PassThrough } from 'stream';\n\ntype RenderToPipeableStreamOptions = {\n  [key: string]: unknown;\n  onShellReady?: () => void;\n  onAllReady?: () => void;\n  onShellError?: (error: unknown) => void;\n  onError?: (error: unknown) => void;\n};\n\ntype RenderToPipeableStreamResult = {\n  pipe: (destination: NodeJS.WritableStream) => void;\n  abort: () => void;\n};\n\ntype RenderToPipeableStreamFunction = (\n  node: ReactNode,\n  options: RenderToPipeableStreamOptions,\n) => RenderToPipeableStreamResult;\n\nexport interface SentryHandleRequestOptions {\n  /**\n   * Timeout in milliseconds after which the rendering stream will be aborted\n   * @default 10000\n   */\n  streamTimeout?: number;\n\n  /**\n   * React's renderToPipeableStream function from 'react-dom/server'\n   */\n  renderToPipeableStream: RenderToPipeableStreamFunction;\n\n  /**\n   * The <ServerRouter /> component from '@react-router/server'\n   */\n  ServerRouter: typeof ServerRouter;\n\n  /**\n   * createReadableStreamFromReadable from '@react-router/node'\n   */\n  createReadableStreamFromReadable: typeof createReadableStreamFromReadable;\n\n  /**\n   * Regular expression to identify bot user agents\n   * @default /bot|crawler|spider|googlebot|chrome-lighthouse|baidu|bing|google|yahoo|lighthouse/i\n   */\n  botRegex?: RegExp;\n}\n\n/**\n * A complete Sentry-instrumented handleRequest implementation that handles both\n * route parametrization and trace meta tag injection.\n *\n * @param options Configuration options\n * @returns A Sentry-instrumented handleRequest function\n */\nexport function createSentryHandleRequest(\n  options: SentryHandleRequestOptions,\n): (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  routerContext: EntryContext,\n  loadContext: AppLoadContext,\n) => Promise<unknown> {\n  const {\n    streamTimeout = 10000,\n    renderToPipeableStream,\n    ServerRouter,\n    createReadableStreamFromReadable,\n    botRegex = /bot|crawler|spider|googlebot|chrome-lighthouse|baidu|bing|google|yahoo|lighthouse/i,\n  } = options;\n\n  const handleRequest = function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    routerContext: EntryContext,\n    _loadContext: AppLoadContext,\n  ): Promise<Response> {\n    return new Promise((resolve, reject) => {\n      let shellRendered = false;\n      const userAgent = request.headers.get('user-agent');\n\n      // Determine if we should use onAllReady or onShellReady\n      const isBot = typeof userAgent === 'string' && botRegex.test(userAgent);\n      const isSpaMode = !!(routerContext as { isSpaMode?: boolean }).isSpaMode;\n\n      const readyOption = isBot || isSpaMode ? 'onAllReady' : 'onShellReady';\n\n      const { pipe, abort } = renderToPipeableStream(<ServerRouter context={routerContext} url={request.url} />, {\n        [readyOption]() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          // this injects trace data to the HTML head\n          pipe(getMetaTagTransformer(body));\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          // eslint-disable-next-line no-param-reassign\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            // eslint-disable-next-line no-console\n            console.error(error);\n          }\n        },\n      });\n\n      // Abort the rendering stream after the `streamTimeout`\n      setTimeout(abort, streamTimeout);\n    });\n  };\n\n  // Wrap the handle request function for request parametrization\n  return wrapSentryHandleRequest(handleRequest);\n}\n"],"names":["React","PassThrough","stream","getMetaTagTransformer","wrapSentryHandleRequest"],"mappings":";;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,yBAAyB;AACzC,EAAE,OAAO;AACT;;AAMA,CAAsB;AACtB,EAAE,MAAM;AACR,IAAI,aAAA,GAAgB,KAAK;AACzB,IAAI,sBAAsB;AAC1B,IAAI,YAAY;AAChB,IAAI,gCAAgC;AACpC,IAAI,QAAA,GAAW,oFAAoF;AACnG,GAAE,GAAI,OAAO;;AAEb,EAAE,MAAM,aAAA,GAAgB,SAAS,aAAa;AAC9C,IAAI,OAAO;AACX,IAAI,kBAAkB;AACtB,IAAI,eAAe;AACnB,IAAI,aAAa;AACjB,IAAI,YAAY;AAChB,IAAuB;AACvB,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,MAAM,IAAI,aAAc,GAAE,KAAK;AAC/B,MAAM,MAAM,SAAU,GAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;;AAEzD;AACA,MAAM,MAAM,KAAA,GAAQ,OAAO,SAAU,KAAI,QAAS,IAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;AAC7E,MAAM,MAAM,YAAY,CAAC,CAAC,CAAC,aAAA,GAA0C,SAAS;;AAE9E,MAAM,MAAM,cAAc,KAAA,IAAS,SAAU,GAAE,YAAa,GAAE,cAAc;;AAE5E,MAAM,MAAM,EAAE,IAAI,EAAE,OAAQ,GAAE,sBAAsB,CAACA,aAAC,CAAA,aAAA,CAAA,YAAA,EAAA,EAAa,OAAO,EAAC,aAAc,EAAE,GAAG,EAAC,OAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;AACjH,QAAQ,CAAC,WAAW,CAAC,GAAG;AACxB,UAAU,aAAA,GAAgB,IAAI;AAC9B,UAAU,MAAM,IAAK,GAAE,IAAIC,kBAAW,EAAE;;AAExC,UAAU,MAAMC,QAAO,GAAE,gCAAgC,CAAC,IAAI,CAAC;;AAE/D,UAAU,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC;;AAE1D,UAAU,OAAO;AACjB,YAAY,IAAI,QAAQ,CAACA,QAAM,EAAE;AACjC,cAAc,OAAO,EAAE,eAAe;AACtC,cAAc,MAAM,EAAE,kBAAkB;AACxC,aAAa,CAAC;AACd,WAAW;;AAEX;AACA,UAAU,IAAI,CAACC,6CAAqB,CAAC,IAAI,CAAC,CAAC;AAC3C,SAAS;AACT,QAAQ,YAAY,CAAC,KAAK,EAAW;AACrC,UAAU,MAAM,CAAC,KAAK,CAAC;AACvB,SAAS;AACT,QAAQ,OAAO,CAAC,KAAK,EAAW;AAChC;AACA,UAAU,kBAAA,GAAqB,GAAG;AAClC;AACA;AACA;AACA,UAAU,IAAI,aAAa,EAAE;AAC7B;AACA,YAAY,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;AAChC;AACA,SAAS;AACT,OAAO,CAAC;;AAER;AACA,MAAM,UAAU,CAAC,KAAK,EAAE,aAAa,CAAC;AACtC,KAAK,CAAC;AACN,GAAG;;AAEH;AACA,EAAE,OAAOC,+CAAuB,CAAC,aAAa,CAAC;AAC/C;;;;"}